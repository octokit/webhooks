{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "common/installation.schema.json",
  "description": "The GitHub App installation.",
  "required": [
    "id",
    "account",
    "repository_selection",
    "access_tokens_url",
    "repositories_url",
    "html_url",
    "app_id",
    "target_id",
    "target_type",
    "permissions",
    "events",
    "created_at",
    "updated_at",
    "single_file_name",
    "suspended_at",
    "suspended_by"
  ],
  "type": "object",
  "properties": {
    "id": { "type": "integer", "description": "The ID of the installation." },
    "account": { "$ref": "user.schema.json" },
    "repository_selection": {
      "type": "string",
      "enum": ["all", "selected"],
      "description": "Describe whether all repositories have been selected or there's a selection involved"
    },
    "access_tokens_url": { "type": "string", "format": "uri" },
    "repositories_url": { "type": "string", "format": "uri" },
    "html_url": { "type": "string", "format": "uri" },
    "app_id": { "type": "integer" },
    "app_slug": { "type": "string" },
    "target_id": {
      "type": "integer",
      "description": "The ID of the user or organization this token is being scoped to."
    },
    "target_type": { "type": "string", "enum": ["User", "Organization"] },
    "permissions": {
      "type": "object",
      "required": [],
      "properties": {
        "actions": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for GitHub Actions workflows, workflow runs, and artifacts."
        },
        "administration": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for repository creation, deletion, settings, teams, and collaborators creation."
        },
        "blocking": { "type": "string", "enum": ["read", "write"] },
        "checks": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for checks on code."
        },
        "content_references": { "type": "string", "enum": ["read", "write"] },
        "contents": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for repository contents, commits, branches, downloads, releases, and merges."
        },
        "deployments": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for deployments and deployment statuses."
        },
        "discussions": { "type": "string", "enum": ["read", "write"] },
        "emails": { "type": "string", "enum": ["read", "write"] },
        "environments": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for managing repository environments."
        },
        "issues": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for issues and related comments, assignees, labels, and milestones."
        },
        "members": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for organization teams and members."
        },
        "merge_queues": { "type": "string", "enum": ["read", "write"] },
        "metadata": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to search repositories, list collaborators, and access repository metadata."
        },
        "organization_administration": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage access to an organization."
        },
        "organization_events": { "type": "string", "enum": ["read", "write"] },
        "organization_hooks": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage the post-receive hooks for an organization."
        },
        "organization_packages": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for organization packages published to GitHub Packages."
        },
        "organization_plan": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for viewing an organization's plan."
        },
        "organization_projects": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage organization projects and projects beta (where available)."
        },
        "organization_secrets": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage organization secrets."
        },
        "organization_self_hosted_runners": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to view and manage GitHub Actions self-hosted runners available to an organization."
        },
        "organization_user_blocking": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to view and manage users blocked by the organization."
        },
        "packages": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for packages published to GitHub Packages."
        },
        "pages": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
        },
        "pull_requests": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for pull requests and related comments, assignees, labels, milestones, and merges."
        },
        "repository_hooks": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage the post-receive hooks for a repository."
        },
        "repository_projects": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage repository projects, columns, and cards."
        },
        "secret_scanning_alerts": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to view and manage secret scanning alerts."
        },
        "secrets": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage repository secrets."
        },
        "security_events": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to view and manage security events like code scanning alerts."
        },
        "security_scanning_alert": {
          "type": "string",
          "enum": ["read", "write"]
        },
        "single_file": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage just a single file."
        },
        "statuses": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token for commit statuses."
        },
        "team_discussions": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage team discussions and related comments."
        },
        "vulnerability_alerts": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to manage Dependabot alerts."
        },
        "workflows": {
          "type": "string",
          "enum": ["read", "write"],
          "description": "The level of permission granted to the access token to update GitHub Actions workflow files."
        }
      },
      "additionalProperties": false
    },
    "events": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "branch_protection_rule",
          "check_run",
          "check_suite",
          "code_scanning_alert",
          "commit_comment",
          "content_reference",
          "create",
          "delete",
          "deployment",
          "deployment_review",
          "deployment_status",
          "deploy_key",
          "discussion",
          "discussion_comment",
          "fork",
          "gollum",
          "issues",
          "issue_comment",
          "label",
          "member",
          "membership",
          "merge_queue_entry",
          "milestone",
          "organization",
          "org_block",
          "page_build",
          "project",
          "projects_v2_item",
          "project_card",
          "project_column",
          "public",
          "pull_request",
          "pull_request_review",
          "pull_request_review_comment",
          "pull_request_review_thread",
          "push",
          "registry_package",
          "release",
          "repository",
          "repository_dispatch",
          "secret_scanning_alert",
          "secret_scanning_alert_location",
          "star",
          "status",
          "team",
          "team_add",
          "watch",
          "workflow_dispatch",
          "workflow_job",
          "workflow_run"
        ]
      }
    },
    "created_at": {
      "oneOf": [
        { "type": "string", "format": "date-time" },
        { "type": "integer" }
      ]
    },
    "updated_at": {
      "oneOf": [
        { "type": "string", "format": "date-time" },
        { "type": "integer" }
      ]
    },
    "single_file_name": { "type": ["string", "null"] },
    "has_multiple_single_files": { "type": "boolean" },
    "single_file_paths": { "type": "array", "items": { "type": "string" } },
    "suspended_by": {
      "oneOf": [{ "$ref": "user.schema.json" }, { "type": "null" }]
    },
    "suspended_at": { "type": ["string", "null"], "format": "date-time" }
  },
  "additionalProperties": false,
  "title": "Installation"
}
